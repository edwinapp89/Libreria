//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LibreriaBD
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class LIBRERIAEntities : DbContext
    {
        public LIBRERIAEntities()
            : base("name=LIBRERIAEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<LIBROS> LIBROS { get; set; }
        public virtual DbSet<RESENIAS> RESENIAS { get; set; }
        public virtual DbSet<USUARIOS> USUARIOS { get; set; }
    
        public virtual int sp_ActualizarResenia(Nullable<int> id, string resenia, string comentario, Nullable<int> calificacion, Nullable<int> idLibro, Nullable<int> idUsuario)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var reseniaParameter = resenia != null ?
                new ObjectParameter("resenia", resenia) :
                new ObjectParameter("resenia", typeof(string));
    
            var comentarioParameter = comentario != null ?
                new ObjectParameter("comentario", comentario) :
                new ObjectParameter("comentario", typeof(string));
    
            var calificacionParameter = calificacion.HasValue ?
                new ObjectParameter("calificacion", calificacion) :
                new ObjectParameter("calificacion", typeof(int));
    
            var idLibroParameter = idLibro.HasValue ?
                new ObjectParameter("idLibro", idLibro) :
                new ObjectParameter("idLibro", typeof(int));
    
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("idUsuario", idUsuario) :
                new ObjectParameter("idUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ActualizarResenia", idParameter, reseniaParameter, comentarioParameter, calificacionParameter, idLibroParameter, idUsuarioParameter);
        }
    
        public virtual int sp_EliminarResenia(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_EliminarResenia", idParameter);
        }
    
        public virtual int sp_Libros(string titulo, string autor, string editorial, string categoria, string resumen)
        {
            var tituloParameter = titulo != null ?
                new ObjectParameter("titulo", titulo) :
                new ObjectParameter("titulo", typeof(string));
    
            var autorParameter = autor != null ?
                new ObjectParameter("autor", autor) :
                new ObjectParameter("autor", typeof(string));
    
            var editorialParameter = editorial != null ?
                new ObjectParameter("editorial", editorial) :
                new ObjectParameter("editorial", typeof(string));
    
            var categoriaParameter = categoria != null ?
                new ObjectParameter("categoria", categoria) :
                new ObjectParameter("categoria", typeof(string));
    
            var resumenParameter = resumen != null ?
                new ObjectParameter("resumen", resumen) :
                new ObjectParameter("resumen", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Libros", tituloParameter, autorParameter, editorialParameter, categoriaParameter, resumenParameter);
        }
    
        public virtual int sp_Resenias(string resenia, string comentario, Nullable<int> calificacion, Nullable<int> idLibro, Nullable<int> idUsuario)
        {
            var reseniaParameter = resenia != null ?
                new ObjectParameter("resenia", resenia) :
                new ObjectParameter("resenia", typeof(string));
    
            var comentarioParameter = comentario != null ?
                new ObjectParameter("comentario", comentario) :
                new ObjectParameter("comentario", typeof(string));
    
            var calificacionParameter = calificacion.HasValue ?
                new ObjectParameter("calificacion", calificacion) :
                new ObjectParameter("calificacion", typeof(int));
    
            var idLibroParameter = idLibro.HasValue ?
                new ObjectParameter("idLibro", idLibro) :
                new ObjectParameter("idLibro", typeof(int));
    
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("idUsuario", idUsuario) :
                new ObjectParameter("idUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Resenias", reseniaParameter, comentarioParameter, calificacionParameter, idLibroParameter, idUsuarioParameter);
        }
    
        public virtual int sp_Usuarios(string documento, string nombreCompleto, string email, string clave, ObjectParameter registrado, ObjectParameter mensaje)
        {
            var documentoParameter = documento != null ?
                new ObjectParameter("documento", documento) :
                new ObjectParameter("documento", typeof(string));
    
            var nombreCompletoParameter = nombreCompleto != null ?
                new ObjectParameter("nombreCompleto", nombreCompleto) :
                new ObjectParameter("nombreCompleto", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var claveParameter = clave != null ?
                new ObjectParameter("clave", clave) :
                new ObjectParameter("clave", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Usuarios", documentoParameter, nombreCompletoParameter, emailParameter, claveParameter, registrado, mensaje);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_ValidarUsuarios(string email, string clave)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var claveParameter = clave != null ?
                new ObjectParameter("clave", clave) :
                new ObjectParameter("clave", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_ValidarUsuarios", emailParameter, claveParameter);
        }
    }
}
